//! Autogenerated weights for `runtime_indracores::indras`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-07-07, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `bm4`, CPU: `Intel(R) Core(TM) i7-7700K CPU @ 4.20GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("selendra-dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/selendra
// benchmark
// pallet
// --chain=selendra-dev
// --steps=50
// --repeat=20
// --pallet=runtime_indracores::indras
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --header=./file_header.txt
// --output=./runtime/selendra/src/weights/runtime_indracores_indras.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `runtime_indracores::indras`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> runtime_indracores::indras::WeightInfo for WeightInfo<T> {
	// Storage: Indras CurrentCodeHash (r:1 w:1)
	// Storage: Indras CodeByHashRefs (r:1 w:1)
	// Storage: Indras PastCodeMeta (r:1 w:1)
	// Storage: Indras PastCodePruning (r:1 w:1)
	// Storage: Indras PastCodeHash (r:0 w:1)
	// Storage: Indras CodeByHash (r:0 w:1)
	/// The range of component `c` is `[1, 3145728]`.
	fn force_set_current_code(c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Indras Heads (r:0 w:1)
	/// The range of component `s` is `[1, 1048576]`.
	fn force_set_current_head(s: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Configuration ActiveConfig (r:1 w:0)
	// Storage: Indras FutureCodeHash (r:1 w:1)
	// Storage: Indras CurrentCodeHash (r:1 w:0)
	// Storage: Indras UpgradeCooldowns (r:1 w:1)
	// Storage: Indras PvfActiveVoteMap (r:1 w:0)
	// Storage: Indras CodeByHash (r:1 w:1)
	// Storage: Indras UpcomingUpgrades (r:1 w:1)
	// Storage: System Digest (r:1 w:1)
	// Storage: Indras CodeByHashRefs (r:1 w:1)
	// Storage: Indras FutureCodeUpgrades (r:0 w:1)
	// Storage: Indras UpgradeRestrictionSignal (r:0 w:1)
	/// The range of component `c` is `[1, 3145728]`.
	fn force_schedule_code_upgrade(c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	// Storage: Indras FutureCodeUpgrades (r:1 w:0)
	// Storage: Indras Heads (r:0 w:1)
	// Storage: Indras UpgradeGoAheadSignal (r:0 w:1)
	/// The range of component `s` is `[1, 1048576]`.
	fn force_note_new_head(s: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: IndrasShared CurrentSessionIndex (r:1 w:0)
	// Storage: Indras ActionsQueue (r:1 w:1)
	fn force_queue_action() -> Weight {
		(21_760_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Indras PvfActiveVoteMap (r:1 w:0)
	// Storage: Indras CodeByHash (r:1 w:1)
	/// The range of component `c` is `[1, 3145728]`.
	fn add_trusted_validation_code(c: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Indras CodeByHashRefs (r:1 w:0)
	// Storage: Indras CodeByHash (r:0 w:1)
	fn poke_unused_validation_code() -> Weight {
		(5_141_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Configuration ActiveConfig (r:1 w:0)
	// Storage: IndrasShared ActiveValidatorKeys (r:1 w:0)
	// Storage: IndrasShared CurrentSessionIndex (r:1 w:0)
	// Storage: Indras PvfActiveVoteMap (r:1 w:1)
	fn include_pvf_check_statement() -> Weight {
		(104_152_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Configuration ActiveConfig (r:1 w:0)
	// Storage: IndrasShared ActiveValidatorKeys (r:1 w:0)
	// Storage: IndrasShared CurrentSessionIndex (r:1 w:0)
	// Storage: Indras PvfActiveVoteMap (r:1 w:1)
	// Storage: Indras PvfActiveVoteList (r:1 w:1)
	// Storage: Indras UpcomingUpgrades (r:1 w:1)
	// Storage: System Digest (r:1 w:1)
	// Storage: Indras FutureCodeUpgrades (r:0 w:100)
	fn include_pvf_check_statement_finalize_upgrade_accept() -> Weight {
		(679_914_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(104 as Weight))
	}
	// Storage: Configuration ActiveConfig (r:1 w:0)
	// Storage: IndrasShared ActiveValidatorKeys (r:1 w:0)
	// Storage: IndrasShared CurrentSessionIndex (r:1 w:0)
	// Storage: Indras PvfActiveVoteMap (r:1 w:1)
	// Storage: Indras PvfActiveVoteList (r:1 w:1)
	// Storage: Indras CodeByHashRefs (r:1 w:1)
	// Storage: Indras CodeByHash (r:0 w:1)
	// Storage: Indras UpgradeGoAheadSignal (r:0 w:100)
	// Storage: Indras FutureCodeHash (r:0 w:100)
	fn include_pvf_check_statement_finalize_upgrade_reject() -> Weight {
		(600_270_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(204 as Weight))
	}
	// Storage: Configuration ActiveConfig (r:1 w:0)
	// Storage: IndrasShared ActiveValidatorKeys (r:1 w:0)
	// Storage: IndrasShared CurrentSessionIndex (r:1 w:0)
	// Storage: Indras PvfActiveVoteMap (r:1 w:1)
	// Storage: Indras PvfActiveVoteList (r:1 w:1)
	// Storage: Indras ActionsQueue (r:1 w:1)
	fn include_pvf_check_statement_finalize_onboarding_accept() -> Weight {
		(545_636_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Configuration ActiveConfig (r:1 w:0)
	// Storage: IndrasShared ActiveValidatorKeys (r:1 w:0)
	// Storage: IndrasShared CurrentSessionIndex (r:1 w:0)
	// Storage: Indras PvfActiveVoteMap (r:1 w:1)
	// Storage: Indras PvfActiveVoteList (r:1 w:1)
	// Storage: Indras CodeByHashRefs (r:1 w:1)
	// Storage: Indras IndraLifecycles (r:0 w:100)
	// Storage: Indras CodeByHash (r:0 w:1)
	// Storage: Indras CurrentCodeHash (r:0 w:100)
	// Storage: Indras UpcomingIndrasGenesis (r:0 w:100)
	fn include_pvf_check_statement_finalize_onboarding_reject() -> Weight {
		(650_749_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(304 as Weight))
	}
}
